if [[ "-is-bsecret" == "$1" ]]; then
  echo "git-bsecret is active"
  exit 0 
fi
if [[ "push" != "$1" ]] ; then
  "$git_path" "$@"
  exit "$?"
fi

directory_decrypt() {
  mapfile -t gpg_files < <(find . -type f -name "*.gpg")
  for file in "${gpg_files[@]}"; do
    gpg --decrypt "$file" > "${file:0:-4}"
    touch -r "$file" "${$file:0:-4}"
    rm "$file"
  done
}

# encrypt every file matching the pattern, skipping those that end w/ .gpg
# $1 = pattern 
encrypt_pattern() {
  mapfile -t repo_files < <(find . -type f -name "$1")
  for file in "${repo_files[@]}"; do
    [[ "${$file:0:-4}" == ".gpg" ]] && continue 
    gpg --encrypt --recipient xsj3n@tutanota.com --yes --trust-model always --output "$file.gpg" "$file"

    echo " encrypt mode - $file"
    "$git_path" rm --cached "$file" &>/dev/null 
    "$git_path" "$file.gpg"
  done
}


echo "secret check starting..."
shopt -s nullglob
repo_root="$(git rev-parse --show-toplevel)"
mapfile -t secret_file_patterns < "$repo_root/.gitsecret"

for pattern in "${secret_file_patterns[@]}"; do
  encrypt_pattern "$pattern" staged_files
done

"$git_path" commit --amend --no-edit
"$git_path" "${@:2}"
directory_decrypt
